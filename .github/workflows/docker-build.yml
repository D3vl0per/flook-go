name: Branch based docker build and publish

on:
  push:
    branches:
      - "*"
    # branches-ignore:
    #  - 'main'
    tags:
      - v*
#  pull_request:

env:
  DIVE_VERSION: v0.10

jobs:
  test:
    name: Test container build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: docker-image-cache
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Run test build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  push:
    name: Build and publish the conatiner image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v2

      - name: Setup buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Get current repository name
        run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> $GITHUB_ENV
        shell: bash

      - name: Determine tag name
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$REPOSITORY_NAME
          IMAGE_ID_2=${{ secrets.DOCKER_REPO }}/${{ secrets.DOCKER_LOGIN_NAME }}/$REPOSITORY_NAME
          IMAGE_ID_3=${{ secrets.DOCKER_REPO_2 }}/$IMAGE_NAME/$IMAGE_NAME
          
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          IMAGE_ID_2=$(echo $IMAGE_ID_2 | tr '[A-Z]' '[a-z]')
          IMAGE_ID_3=$(echo $IMAGE_ID_3 | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          echo "IMAGE_ID_2=$IMAGE_ID_2" >> $GITHUB_ENV
          echo "IMAGE_ID_3=$IMAGE_ID_3" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          load: true
          tags: app:latest
          cache-from: type=local,src=/tmp/.buildx-cache

      - name: Check container image with dive
        run: |
          docker pull wagoodman/dive:$DIVE_VERSION
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock --mount type=bind,source="$(pwd)"/.dive-ci,target=/.dive-ci,readonly wagoodman/dive:$DIVE_VERSION --ci app:latest --ci-config /.dive-ci

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to External Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_LOGIN_NAME }}
          password: ${{ secrets.DOCKER_API_TOKEN }}
          
      - name: Login to another External Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REPO_2 }}
          username: ${{ secrets.DOCKER_LOGIN_NAME_2 }}
          password: ${{ secrets.DOCKER_API_TOKEN_2 }}

      - name: Tag the container images
        run: |
          docker tag app:latest $IMAGE_ID:$VERSION
          docker tag app:latest $IMAGE_ID_2:$VERSION
          docker tag app:latest $IMAGE_ID_3:$VERSION

      - name: Push container image to Github Container Registry
        run: docker push $IMAGE_ID:$VERSION

      - name: Push container image to External Container Registry
        run: docker push $IMAGE_ID_2:$VERSION
        
      - name: Push container image to another External Container Registry
        run: docker push $IMAGE_ID_3:$VERSION
    
